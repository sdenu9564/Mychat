{"version":3,"file":"static/js/583.e7062bd9.chunk.js","mappings":"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","sources":["components/drawer/Profile.jsx","components/drawer/Drawer.jsx","components/chat/menu/HeaderMenu.jsx","components/chat/menu/Header.jsx","components/chat/menu/Search.jsx","service/api.js","utils/common-utils.js","components/chat/menu/Conversation.jsx","constants/data.js","components/chat/menu/Conversations.jsx","components/chat/menu/Menu.jsx","components/chat/chat/ChatHeader.jsx","components/chat/chat/Message.jsx","components/chat/chat/Footer.jsx","components/chat/chat/Messages.jsx","components/chat/chat/ChatBox.jsx","components/chat/chat/EmptyChat.jsx","components/chat/ChatDialog.jsx","components/account/LoginDialog.jsx","components/Messenger.jsx"],"sourcesContent":["import { useContext } from \"react\";\nimport { Box, styled, Typography } from \"@mui/material\"\n\nimport { AccountContext } from \"../../context/AccountProvider\";\n\nconst ImageContainer = styled(Box)`\n    display: flex;\n    justify-content: center;\n`;\n\nconst Image = styled('img') ({\n    width: 200,\n    height: 200,\n    borderRadius: '50%',\n    padding: '25px 0'\n});\n\nconst BoxWrapper = styled(Box)`\n    background: #FFFFFF;\n    padding: 12px 30px 2px;\n    box-shadow: 0 1px 3px rgba(0, 0, 0, 0.08);\n    & :first-child {\n        font-size: 13px;\n        color: #009688;\n        font-weight: 200;\n    };\n    & :last-child {\n        margin: 14px 0;\n        color: #4A4A4A;\n    }\n`;\n\nconst DescriptionContainer = styled(Box)`\n    padding: 15px 20px 28px 30px;\n    & > p {\n        color: #8696a0;\n        font-size: 13px;\n    }\n`;\n\nconst Profile = () => {\n\n    const { account } = useContext(AccountContext);\n\n    return (\n        <>\n            <ImageContainer>\n                <Image src={account?.picture} alt=\"displaypicture\" />\n            </ImageContainer>\n            <BoxWrapper>\n                <Typography>Your name</Typography>\n                <Typography>{account.name}</Typography>\n            </BoxWrapper>\n            <DescriptionContainer>\n                <Typography>This is not your username or pin. This name will be visible to your WhatsApp contacts.</Typography>\n            </DescriptionContainer>\n            <BoxWrapper>\n                <Typography>About</Typography>\n                <Typography>Eat! Sleep! Code! Repeat</Typography>\n            </BoxWrapper>\n        </>\n    )\n}\n\nexport default Profile;","import { styled, Drawer, Box, Typography } from '@mui/material';\nimport { ArrowBack } from '@mui/icons-material';\n\n//components\nimport Profile from './Profile';\n\nconst Header = styled(Box)`\n  background: #008069;\n  height: 107px;\n  color: #FFFFFF;\n  display: flex;\n  & > svg, & > p {\n    margin-top: auto;\n    padding: 15px;\n    font-weight: 600;\n`;\n\nconst Component = styled(Box)`\n  background: #ededed;\n  height: 85%;\n`;\n\nconst Text = styled(Typography)`\n    font-size: 18px;\n`\n\nconst drawerStyle = {\n    left: 20,\n    top: 17,\n    height: '95%',\n    width: '30%',\n    boxShadow: 'none'\n}\n\nconst InfoDrawer = ({ open, setOpen, profile }) => {\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <Drawer\n            open={open}\n            onClose={handleClose}\n            PaperProps={{ sx: drawerStyle }}\n            style={{ zIndex: 1500 }}\n        >\n            <Header>\n                <ArrowBack onClick={() => setOpen(false)} />\n                <Text>Profile</Text>\n            </Header>\n            <Component>\n                {profile && <Profile />}\n            </Component>\n        </Drawer>\n    );\n}\n\nexport default InfoDrawer;","import { useState, useContext } from 'react';\n\nimport { MoreVert } from '@mui/icons-material';\nimport { Menu, MenuItem, styled } from '@mui/material';\n\nimport { googleLogout } from '@react-oauth/google';\nimport { AccountContext } from '../../../context/AccountProvider';\nimport { UserContext } from '../../../context/UserProvider';\n\nimport { clientId } from '../../../constants/data';\n\n//components\nimport InfoDrawer from '../../drawer/Drawer';\n\nconst MenuOption = styled(MenuItem)`\n    font-size: 14px\n    padding: 15px 60px 5px 24px;\n    color: #4A4A4A;\n`;\n\nconst Logout = styled(googleLogout)`\n    border: none;\n    box-shadow: none;\n`;\n\nconst HeaderMenu = () => {\n    \n    const [open, setOpen] = useState(false);\n    const [openDrawer, setOpenDrawer] = useState(false);\n    \n    const { setAccount, setShowloginButton, showlogoutButton, setShowlogoutButton } = useContext(AccountContext);\n    const { setPerson } = useContext(UserContext);\n\n\n    const handleClick = (event) => {\n        setOpen(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setOpen(null);\n    };\n\n    const onSignoutSuccess = () => {\n        alert(\"You have been logged out successfully\");\n        console.clear();\n        setShowlogoutButton(false);\n        setShowloginButton(true);\n        setAccount('');\n        setPerson({});\n    };\n\n    const toggleDrawer = () => {\n        setOpenDrawer(true);\n    }\n\n\n\n    return (\n        <>\n            <MoreVert onClick={handleClick} />\n            <Menu\n                anchorEl={open}\n                keepMounted\n                open={open}\n                onClose={handleClose}\n                getContentAnchorEl={null}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                }}\n            >\n                <MenuOption onClick={() => { handleClose(); toggleDrawer()}}>Profile</MenuOption>\n                <MenuOption onClick={() => { handleClose(); }}>\n                {/* { showlogoutButton ?\n                    <Logout\n                        clientId={clientId}\n                        buttonText=\"Logout\"\n                        onLogoutSuccess={onSignoutSuccess}\n                    >\n                    </Logout> : null\n                } */}\n                </MenuOption>\n            </Menu>\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\n        </>\n    )\n}\n\nexport default HeaderMenu;\n","import { useContext, useState } from 'react';\n\nimport { Box, styled } from '@mui/material';\nimport { Chat as MessageIcon } from '@mui/icons-material';\n\nimport { AccountContext } from '../../../context/AccountProvider';\n\n//components\nimport HeaderMenu from './HeaderMenu';\nimport InfoDrawer from '../../drawer/Drawer';\n\nconst Component = styled(Box)`\n    height: 44px;\n    background: #ededed;\n    display: flex;\n    padding: 8px 16px;\n    align-items: center;\n`;\n\nconst Wrapper = styled(Box) `\n    margin-left: auto;\n    & > * {\n        margin-left: 2px;\n        padding: 8px;\n        color: #000;\n    };\n    & :first-child {\n        font-size: 22px;\n        margin-right: 8px;\n        margin-top: 3px;\n    }\n`;\n    \nconst Image = styled('img') ({\n    height: 40,\n    width: 40,\n    borderRadius: '50%'\n})\n\nconst Header = () => {\n    \n    const [openDrawer, setOpenDrawer] = useState(false);\n\n    const { account } = useContext(AccountContext);\n    \n    const toggleDrawer = () => {\n        setOpenDrawer(true);\n    }\n\n    return (\n        <>\n            <Component>\n                <Image src={account.picture} onClick={() => toggleDrawer()} />\n                <Wrapper>\n                    <MessageIcon />\n                    <HeaderMenu/>\n                </Wrapper>\n            </Component>\n            <InfoDrawer open={openDrawer} setOpen={setOpenDrawer} profile={true} />\n        </>\n    )\n}\n\nexport default Header;","\nimport { Box, InputBase, styled } from '@mui/material';\nimport { Search as SearchIcon } from '@mui/icons-material';\n\nconst Component = styled(Box)`\n    background: #fff;\n    height: 45px;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid #F2F2F2;\n`;\n\nconst Wrapper = styled(Box)`\n    position: relative;\n    border-radius: 10px;\n    background-color: #f0f2f5;\n    margin: 0 13px;\n    width: 100%;\n`;\n\nconst Icon = styled(Box)`\n    color: #919191;\n    padding: 8px;\n    height: 100%;\n    position: absolute;\n`;\n      \nconst InputField = styled(InputBase) `\n    width: 100%;\n    padding: 16px;\n    padding-left: 65px;\n    font-size: 14px;\n    height: 15px;\n    width: 100%;\n`;\n\nconst Search = ({ setText }) => {\n\n    return (\n        <Component>\n            <Wrapper>\n                <Icon>\n                    <SearchIcon fontSize=\"small\"/>\n                </Icon>\n                <InputField\n                    placeholder=\"Search or start new chat\"\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange={(e) => setText(e.target.value)}\n                />\n            </Wrapper>\n        </Component>\n    )\n}\n\nexport default Search;","  \nimport axios from 'axios';\n\nconst url = 'http://localhost:8000';\n\nexport const addUser = async (data) => {\n    try {\n        let response = await axios.post(`${url}/add`, data);\n        return response.data;\n    } catch (error) {\n        console.log('Error while calling addUser API ', error);\n    }\n}\n\nexport const getUsers = async () => {\n    try {\n        let response = await axios.get(`${url}/users`);\n        return response.data\n    } catch (error) {\n        console.log('Error while calling getUsers API ', error);\n    }\n}\n\nexport const setConversation = async (data) => {\n    try {\n        await axios.post(`${url}/conversation/add`, data);\n    } catch (error) {\n        console.log('Error while calling setConversation API ', error);\n    }\n}\n\nexport const getConversation = async (users) => {\n    try {\n        let response = await axios.post(`${url}/conversation/get`, users);\n        return response.data;\n    } catch (error) {\n        console.log('Error while calling getConversation API ', error);\n    }\n}\n\nexport const getMessages = async (id) => {\n    try {\n        let response = await axios.get(`${url}/message/get/${id}`);\n        return response.data\n    } catch (error) {\n        console.log('Error while calling getMessages API ', error);\n    }\n}\n\nexport const newMessages = async (data) => {\n    try {\n        return await axios.post(`${url}/message/add`, data);\n    } catch (error) {\n        console.log('Error while calling newConversations API ', error);\n    }\n}\n\nexport const uploadFile = async (data) => {\n    try {\n        return await axios.post(`${url}/file/upload`, data);\n    } catch (error) {\n        console.log('Error while calling newConversations API ', error);\n    }\n}","\n\nexport const downloadMedia = async (e, originalImage) => {\n    e.preventDefault();\n    try {\n        fetch(originalImage)\n        .then(resp => resp.blob())\n        .then(blob => {\n            const url = window.URL.createObjectURL(blob);\n            const a = document.createElement('a');\n            a.style.display = 'none';\n            a.href = url;\n\n            const nameSplit = originalImage.split(\"/\");\n            const duplicateName = nameSplit.pop();\n\n            // the filename you want\n            a.download = \"\" + duplicateName + \"\";\n            document.body.appendChild(a);\n            a.click();\n            window.URL.revokeObjectURL(url);\n        })\n        .catch((error) => console.log('Error while downloading the image ', error))\n\n    } catch (error) {\n        console.log('Error while downloading the image ', error);\n    }\n}\n\nexport const formatDate = (date) => {\n    const hours = new Date(date).getHours();\n    const minutes = new Date(date).getMinutes();\n    return `${hours < 10 ? '0' + hours : hours}:${minutes < 10 ? '0' + minutes : minutes}`;\n}","import { useContext, useEffect, useState } from 'react';\n\nimport { styled, Box, Typography } from \"@mui/material\";\n\nimport { UserContext } from '../../../context/UserProvider';\nimport { AccountContext } from '../../../context/AccountProvider';\n\nimport { setConversation, getConversation } from '../../../service/api';\nimport { emptyProfilePicture } from '../../../constants/data';\nimport { formatDate } from '../../../utils/common-utils';\n\nconst Component = styled(Box)`\n    height: 45px;\n    display: flex;\n    padding: 13px 0;\n    cursor: pointer;\n`;\n    \nconst Image = styled('img') ({\n    width: 50,\n    height: 50,\n    objectFit: 'cover',\n    borderRadius: '50%',\n    padding: '0 14px'\n});\n\nconst Container = styled(Box)`\n    display: flex;\n`;\n\nconst Timestamp = styled(Typography)`\n    font-size: 12px;\n    margin-left: auto;\n    color: #00000099;\n    margin-right: 20px;\n`;\n\nconst Text = styled(Typography)`\n    display: block;\n    color: rgba(0, 0, 0, 0.6);\n    font-size: 14px;\n`;\n\nconst Conversation = ({ user }) => {\n    const url = user?.picture || emptyProfilePicture;\n    \n    const { setPerson } = useContext(UserContext);\n    const { account, newMessageFlag }  = useContext(AccountContext);\n\n    const [message, setMessage] = useState({});\n\n    useEffect(() => {\n        const getConversationMessage = async() => {\n            const data = await getConversation({ senderId: account.sub, receiverId: user.sub });\n            setMessage({ text: data?.message, timestamp: data?.updatedAt });\n        }\n        getConversationMessage();\n    }, [newMessageFlag]);\n\n    const getUser = async () => {\n        setPerson(user);\n        await setConversation({ senderId: account.sub, receiverId: user.sub });\n    }\n\n    return (\n        <Component onClick={() => getUser()}>\n            <Box>\n                <Image src={url} alt=\"display picture\" />\n            </Box>\n            <Box style={{width: '100%'}}>\n                <Container>\n                    <Typography>{user.name}</Typography>\n                    { \n                        message?.text && \n                        <Timestamp>{formatDate(message?.timestamp)}</Timestamp>        \n                    }\n                </Container>\n                <Box>\n                    <Text>{message?.text?.includes('localhost') ? 'media' : message.text}</Text>\n                </Box>\n            </Box>\n        </Component>\n    )\n}\n\nexport default Conversation;","export const clientId = '1051426514050-dv0o9fu9umand32ov9iqcamvuf9gttta.apps.googleusercontent.com'\n\nexport const iconPDF = 'https://cdn4.iconfinder.com/data/icons/logos-and-brands/512/27_Pdf_File_Type_Adobe_logo_logos-512.png';\nexport const defaultProfilePicture = 'https://static.straitstimes.com.sg/s3fs-public/articles/2020/12/01/af_moneyheist_011220.jpg';\nexport const emptyChatImage = 'https://i.gadgets360cdn.com/large/whatsapp_multi_device_support_update_image_1636207150180.jpg';\nexport const qrCodeImage = 'https://www.ginifab.com/feeds/qr_code/img/qrcode.jpg';\nexport const emptyProfilePicture = 'https://www.kindpng.com/picc/m/78-785827_user-profile-avatar-login-account-male-user-icon.png';","import { useState, useEffect, useContext } from 'react';\n\nimport { Box, styled, Divider } from '@mui/material';\n\nimport { AccountContext } from '../../../context/AccountProvider';\n\n//components\nimport Conversation from './Conversation';\nimport { getUsers } from '../../../service/api';\n\nconst Component = styled(Box)`\n    overflow: overlay;\n    height: 81vh;\n`;\n\nconst StyledDivider = styled(Divider)`\n    margin: 0 0 0 70px;\n    background-color: #e9edef;\n    opacity: .6;\n`;\n\nconst Conversations = ({ text }) => {\n    const [users, setUsers] = useState([]);\n    \n    const { account, socket, setActiveUsers } = useContext(AccountContext);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            let data = await getUsers();\n            let fiteredData = data.filter(user => user.name.toLowerCase().includes(text.toLowerCase()));\n            setUsers(fiteredData);\n        }\n        fetchData();\n    }, [text]);\n\n    useEffect(() => {\n        socket.current.emit('addUser', account);\n        socket.current.on(\"getUsers\", users => {\n            setActiveUsers(users);\n        })\n    }, [account])\n\n    return (\n        <Component>\n            {\n                users && users.map((user, index) => (\n                    user.sub !== account.sub && \n                        <>\n                            <Conversation user={user} />\n                            {\n                                users.length !== (index + 1)  && <StyledDivider />\n                            }\n                        </>\n                ))\n            }\n        </Component>\n    )\n}\n\nexport default Conversations;","import { useState } from 'react';\n\nimport { Box } from '@mui/material';\n\n//components\nimport Header from './Header';\nimport Search from './Search';\nimport Conversations from './Conversations';\n\nconst Menu = () => {\n    const [text, setText] = useState('');\n    \n    return (\n        <Box>\n            <Header/>\n            <Search setText={setText} />\n            <Conversations text={text} />\n        </Box>\n    )\n}\n\nexport default Menu;","import { useContext } from 'react';\n\nimport { Box, Typography, styled } from '@mui/material';\nimport { Search, MoreVert } from '@mui/icons-material';\n\nimport { AccountContext } from '../../../context/AccountProvider';\nimport { defaultProfilePicture } from '../../../constants/data';\n\nconst Header = styled(Box)`\n    height: 44px;\n    background: #ededed;\n    display: flex;\n    padding: 8px 16px;\n    align-items: center;\n`;\n    \nconst Image = styled('img')({\n    width: 40,\n    height: 40,\n    objectFit: 'cover',\n    borderRadius: '50%'\n})\n\nconst Name = styled(Typography)`\n    margin-left: 12px !important;\n`;\n\nconst RightContainer = styled(Box)`\n    margin-left: auto;\n    & > svg {\n        padding: 8px;\n        font-size: 22px;\n        color: #000;\n    }\n`;\n\nconst Status = styled(Typography)`\n    font-size: 12px !important;\n    color: rgb(0, 0, 0, 0.6);\n    margin-left: 12px !important;\n`;\n\nconst ChatHeader = ({ person }) => {  \n    const url = person?.picture || defaultProfilePicture;\n    \n    const { activeUsers } = useContext(AccountContext);\n\n    return (\n        <Header>\n            <Image src={url} alt=\"display picture\" />     \n            <Box>\n                <Name>{person.name}</Name>\n                <Status>{activeUsers?.find(user => user.sub === person.sub) ? 'Online' : 'Offline'}</Status>    \n            </Box>   \n            <RightContainer>\n                <Search />\n                <MoreVert />    \n            </RightContainer> \n        </Header>\n    )\n}\n\nexport default ChatHeader;","import { useContext } from 'react';\n\nimport { Box, styled, Typography } from '@mui/material';\nimport { GetApp as GetAppIcon } from '@mui/icons-material';\n\nimport { AccountContext } from '../../../context/AccountProvider';\n\nimport { downloadMedia, formatDate } from '../../../utils/common-utils';\nimport { iconPDF } from '../../../constants/data';\n\nconst Wrapper = styled(Box)`\n    background: #FFFFFF;\n    padding: 5px;\n    max-width: 60%;\n    width: fit-content;\n    display: flex;\n    border-radius: 10px;\n    word-break: break-word;\n`;\n    \nconst Own = styled(Box)`\n    background: #dcf8c6;\n    padding: 5px;\n    max-width: 60%;\n    width: fit-content;\n    margin-left: auto;\n    display: flex;\n    border-radius: 10px;\n    word-break: break-word;\n`;\n\nconst Text = styled(Typography)`\n    font-size: 14px;\n    padding: 0 25px 0 5px;\n`;\n\nconst Time = styled(Typography)`\n    font-size: 10px;\n    color: #919191;\n    margin-top: 6px;\n    word-break: keep-all;\n    margin-top: auto;\n`;\n\nconst Message = ({ message }) => {\n    const { account } = useContext(AccountContext);\n\n    return (\n        <>\n        {\n            account.sub === message.senderId ? \n                <Own>\n                    {\n                        message.type === 'file' ? <ImageMessage message={message} /> : <TextMessage message={message} />\n                    }\n                </Own>\n            : \n                <Wrapper>\n                    {\n                        message.type === 'file' ? <ImageMessage message={message} /> : <TextMessage message={message} />\n                    }\n                </Wrapper>\n        }\n        \n        </>\n    )\n}\n\nconst TextMessage = ({ message }) => {\n    \n    return (\n        <>\n            <Text>{message.text}</Text>\n            <Time>{formatDate(message.createdAt)}</Time>\n        </>\n    )\n}\n\nconst ImageMessage = ({ message }) => {\n\n    return (\n        <div style={{ position: 'relative' }}>\n            {\n                message?.text?.includes('.pdf') ?\n                    <div style={{ display: 'flex' }}>\n                        <img src={iconPDF} alt=\"pdf-icon\" style={{ width: 80 }} />\n                        <Typography style={{ fontSize: 14 }} >{message.text.split(\"/\").pop()}</Typography>\n                    </div>\n                : \n                    <img style={{ width: 300, height: '100%', objectFit: 'cover' }} src={message.text} alt={message.text} />\n            }\n            <Time style={{ position: 'absolute', bottom: 0, right: 0 }}>\n                <GetAppIcon \n                    onClick={(e) => downloadMedia(e, message.text)} \n                    fontSize='small' \n                    style={{ marginRight: 10, border: '1px solid grey', borderRadius: '50%' }} \n                />\n                {formatDate(message.createdAt)}\n            </Time>\n        </div>\n    )\n}\n\n\nexport default Message;","import { useEffect } from 'react';\n\nimport { EmojiEmotions, AttachFile, Mic } from '@mui/icons-material';\nimport { Box, styled, InputBase } from '@mui/material';\n\nimport { uploadFile } from '../../../service/api';\n\nconst Container = styled(Box)`\n    height: 55px;\n    background: #ededed;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    padding: 0 15px;\n    &  > * {\n        margin: 5px;\n        color: #919191;\n    }\n`;\n\nconst Search = styled(Box)`\n    border-radius: 18px;\n    background-color: #FFFFFF;\n    width: calc(94% - 100px);\n`;\n\nconst InputField = styled(InputBase)`\n    width: 100%;\n    padding: 20px;\n    padding-left: 25px;\n    font-size: 14px;\n    height: 20px;\n    width: 100%;\n`;\n\nconst ClipIcon = styled(AttachFile)`\n    transform: 'rotate(40deg)'\n`;\n\n\nconst Footer = ({ sendText, value, setValue, setFile, file, setImage }) => {\n\n    useEffect(() => {\n        const getImage = async () => {\n            if (file) {\n                const data = new FormData();\n                data.append(\"name\", file.name);\n                data.append(\"file\", file);\n\n                const response = await uploadFile(data);\n                setImage(response.data);\n            }\n        }\n        getImage();\n    }, [file])\n\n    const onFileChange = (e) => {\n        setValue(e.target.files[0].name);\n        setFile(e.target.files[0]);\n    }\n\n    return (\n        <Container>\n            <EmojiEmotions />\n            <label htmlFor=\"fileInput\">\n                <ClipIcon />\n            </label>\n            <input\n                type='file'\n                id=\"fileInput\"\n                style={{ display: 'none' }}\n                onChange={(e) => onFileChange(e)}\n            />\n\n            <Search>\n                <InputField\n                    placeholder=\"Type a message\"\n                    inputProps={{ 'aria-label': 'search' }}\n                    onChange={(e) => setValue(e.target.value)}\n                    onKeyPress={(e) => sendText(e)}\n                    value={value}\n                />\n            </Search>\n            <Mic />\n        </Container>\n    )\n}\n\nexport default Footer;","import { useState, useEffect, useContext, useRef } from 'react';\nimport { Box, styled } from '@mui/material';\n\nimport { io } from 'socket.io-client';\n\nimport { getMessages, newMessages } from '../../../service/api';\nimport { AccountContext } from '../../../context/AccountProvider';\n\n//components\nimport Message from './Message';\nimport Footer from './Footer';\n\nconst Wrapper = styled(Box)`\n    background-image: url(${'https://user-images.githubusercontent.com/15075759/28719144-86dc0f70-73b1-11e7-911d-60d70fcded21.png'});\n    background-size: 50%;\n`;\n\nconst StyledFooter = styled(Box)`\n    height: 55px;\n    background: #ededed;\n    // position: absolute;\n    width: 100%;\n    // bottom: 0\n`;\n    \nconst Component = styled(Box)`\n    height: 80vh;\n    overflow-y: scroll;\n`;\n\nconst Container = styled(Box)`\n    padding: 1px 80px;\n`;\n\n\n\nconst Messages = ({ person, conversation }) => {\n\n    const [messages, setMessages] = useState([]);\n    const [incomingMessage, setIncomingMessage] = useState(null);\n    const [value, setValue] = useState();\n    const [file, setFile] = useState();\n    const [image, setImage] = useState();\n\n    const scrollRef = useRef();\n\n    const { account, socket, newMessageFlag, setNewMessageFlag } = useContext(AccountContext);\n\n    useEffect(() => {\n        socket.current.on('getMessage', data => {\n            setIncomingMessage({\n                ...data,\n                createdAt: Date.now()\n            })\n        })\n    }, []);\n    \n    useEffect(() => {\n        const getMessageDetails = async () => {\n            let data = await getMessages(conversation?._id);\n            setMessages(data);\n        }\n        getMessageDetails();\n    }, [conversation?._id, person._id, newMessageFlag]);\n\n    useEffect(() => {\n        scrollRef.current?.scrollIntoView({ transition: \"smooth\" })\n    }, [messages]);\n\n    useEffect(() => {\n        incomingMessage && conversation?.members?.includes(incomingMessage.senderId) && \n            setMessages((prev) => [...prev, incomingMessage]);\n        \n    }, [incomingMessage, conversation]);\n\n    const receiverId = conversation?.members?.find(member => member !== account.sub);\n    \n    const sendText = async (e) => {\n        let code = e.keyCode || e.which;\n        if(!value) return;\n\n        if(code === 13) { \n            let message = {};\n            if (!file) {\n                message = {\n                    senderId: account.sub,\n                    receiverId: receiverId,\n                    conversationId: conversation._id,\n                    type: 'text',\n                    text: value\n                };\n            } else {\n                message = {\n                    senderId: account.sub,\n                    conversationId: conversation._id,\n                    receiverId: receiverId,\n                    type: 'file',\n                    text: image\n                };\n            }\n\n            socket.current.emit('sendMessage', message);\n\n            await newMessages(message);\n\n            setValue('');\n            setFile();\n            setImage('');\n            setNewMessageFlag(prev => !prev);\n        } \n    }\n\n    return (\n        <Wrapper>\n            <Component>\n                {\n                    messages && messages.map(message => (\n                        <Container ref={scrollRef}>\n                            <Message message={message} />\n                        </Container>\n                    ))\n                }\n            </Component>\n            <Footer \n                sendText={sendText} \n                value={value} \n                setValue={setValue} \n                setFile={setFile} \n                file={file} \n                setImage={setImage}\n            />\n        </Wrapper>\n    )\n}\n\nexport default Messages;","import { useContext, useState, useEffect } from 'react';\n\nimport { Box } from '@mui/material';\n\nimport { UserContext } from '../../../context/UserProvider';\nimport { AccountContext } from '../../../context/AccountProvider';\nimport { getConversation } from '../../../service/api';\n\n//components\nimport ChatHeader from './ChatHeader';\nimport Messages from './Messages';\n\nconst ChatBox = () => {\n    const { person } = useContext(UserContext);\n    const { account } = useContext(AccountContext);\n\n    const [conversation, setConversation] = useState({});\n    \n    useEffect(() => {\n        const getConversationDetails = async () => {\n            let data = await getConversation({ senderId: account.sub, receiverId: person.sub });\n            setConversation(data);\n        }\n        getConversationDetails();\n    }, [person.sub]);\n\n    return (\n        <Box style={{height: '75%'}}>\n            <ChatHeader person={person} />\n            <Messages person={person} conversation={conversation} />\n        </Box>\n    )\n}\n\nexport default ChatBox;","\nimport { Box, styled, Typography, Divider } from '@mui/material';\n\nimport { emptyChatImage } from '../../../constants/data';\n\nconst Component = styled(Box)`\n    background: #f8f9fa;\n    padding: 30px 0;\n    text-align: center;\n    height: 100%;\n`;\n\nconst Container = styled(Box)`\n    padding: 0 200px;\n`;\n    \nconst Image = styled('img')({\n    marginTop: 100,\n    width: 400\n})\n   \nconst Title = styled(Typography)`\n    font-size: 32px;\n    font-family: inherit;\n    font-weight: 300;\n    color: #41525d;\n    margin-top: 25px 0 10px 0;\n`;\n\nconst SubTitle = styled(Typography)`\n    font-size: 14px;\n    color: #667781;\n    font-weight: 400;\n    font-family: inherit;\n`;\n\nconst StyledDivider = styled(Divider)`\n    margin: 40px 0;\n    opacity: 0.4;\n`;\n\nconst EmptyChat = () => {\n    \n    return (\n        <Component>\n            <Container>\n                <Image src={emptyChatImage} alt=\"empty\" />\n                <Title>WhatsApp Web</Title>\n                <SubTitle>Now send and receive messages without keeping your phone online.</SubTitle>\n                <SubTitle>Use WhatsApp on up to 4 linked devices and 1 phone at the same time. </SubTitle>\n                <StyledDivider />\n            </Container>\n        </Component>\n    )\n}\n\nexport default EmptyChat;","import { useContext } from 'react';\nimport { Dialog, styled, Box } from '@mui/material';\n\nimport { UserContext } from '../../context/UserProvider';\n\n//components\nimport Menu from './menu/Menu';\nimport ChatBox from './chat/ChatBox';\nimport EmptyChat from './chat/EmptyChat';\n\nconst Component = styled(Box)`\n    display: flex;\n`;\n    \nconst LeftComponent = styled(Box)`\n    min-width: 450px;\n`;\n    \nconst RightComponent = styled(Box)`\n    width: 73%;\n    min-width: 300px;\n    height: 100%;\n    border-left: 1px solid rgba(0, 0, 0, 0.14);\n`;\n\nconst dialogStyle = {\n    height: '95%',\n    width: '100%',\n    margin: '20px',\n    maxWidth: '100%',\n    maxHeight: '100%',\n    borderRadius: 0,\n    boxShadow: 'none',\n    overflow: 'hidden'\n};\n\nconst ChatDialog = () => {\n\n    const { person } = useContext(UserContext);\n    \n    return (\n        <Dialog \n            open={true} \n            BackdropProps={{style: {backgroundColor: 'unset'}}}\n            PaperProps={{ sx: dialogStyle }}\n            maxWidth={'md'}\n        >\n            <Component>\n                <LeftComponent>\n                    <Menu/>\n                </LeftComponent>\n                <RightComponent>\n                    {\n                        Object.keys(person).length  ? <ChatBox/> : <EmptyChat />\n                    }\n                </RightComponent>\n            </Component>\n        </Dialog>\n    )\n}\n\nexport default ChatDialog;","import { useContext } from 'react';\n\nimport { Dialog, Typography, List, ListItem, Box, styled } from '@mui/material';\n\nimport { GoogleLogin } from '@react-oauth/google';\nimport jwt_decode from \"jwt-decode\";\n\nimport { addUser } from '../../service/api';\nimport { AccountContext } from '../../context/AccountProvider';\nimport { qrCodeImage } from '../../constants/data';\n\nconst Component = styled(Box)`\n    display: flex; \n`;\n\nconst Container = styled(Box)`\n    padding: 56px 0 56px 56px;\n`;\n\nconst QRCOde = styled('img')({\n    margin: '50px 0 0 50px',\n    height: 264,\n    width: 264\n});\n\nconst Title = styled(Typography)`\n    font-size: 26px;\n    margin-bottom: 25px;\n    color: #525252;\n    font-family: Segoe UI,Helvetica Neue,Helvetica,Lucida Grande,Arial,Ubuntu,Cantarell,Fira Sans,sans-serif;\n    font-weight: 300;\n`;\n\nconst StyledList = styled(List)`\n    &  > li {\n        padding: 0;\n        margin-top: 15px;\n        font-size: 18px;\n        line-height: 28px;\n        color: #4a4a4a;\n    }\n`;\n\nconst dialogStyle = {\n    marginTop: '12%',\n    height: '95%',\n    width: '60%',\n    maxWidth: '100',\n    maxHeight: '100%',\n    borderRadius: 0,\n    boxShadow: 'none',\n    overflow: 'hidden'\n}\n\nconst LoginDialog = () => {\n\n    const { setAccount,showloginButton, setShowloginButton, setShowlogoutButton } = useContext(AccountContext);\n\n    const onLoginSuccess = async (res) => {\n        let decoded = jwt_decode(res.credential);\n        setAccount(decoded);\n        setShowloginButton(false);\n        setShowlogoutButton(true);\n        await addUser(decoded);\n    };\n\n    const onLoginFailure = (res) => {\n        console.log('Login Failed:', res);\n    };\n\n    // const onSignoutSuccess = () => {\n    //     alert(\"You have been logged out successfully\");\n    //     console.clear();\n    //     setShowloginButton(true);\n    //     setShowlogoutButton(false);\n    // };\n\n    return (\n        <Dialog\n            open={true}\n            BackdropProps={{style: {backgroundColor: 'unset'}}}\n            maxWidth={'md'}\n            PaperProps={{ sx: dialogStyle }}\n        >\n            <Component>\n                <Container>\n                    <Title>To use WhatsApp on your computer:</Title>\n                    <StyledList>\n                        <ListItem>1. Open WhatsApp on your phone</ListItem>\n                        <ListItem>2. Tap Menu Settings and select WhatsApp Web</ListItem>\n                        <ListItem>3. Point your phone to this screen to capture the code</ListItem>\n                    </StyledList>\n                </Container>\n                <Box style={{position:'relative'}}>\n                    <QRCOde src={qrCodeImage} alt=\"QR Code\" />\n                    <Box style={{position: 'absolute', top: '50%', transform: 'translateX(25%) translateY(-25%)'}}>\n                        { showloginButton ?\n                            <GoogleLogin\n                                buttonText=\"\"\n                                onSuccess={onLoginSuccess}\n                                onError={onLoginFailure}\n                            /> : null}\n                    </Box>\n                </Box>\n            </Component>\n        </Dialog>\n    )\n}\n\nexport default LoginDialog;","import { useContext } from 'react';\nimport { AppBar, Toolbar, styled, Box } from '@mui/material';\n\nimport { AccountContext } from '../context/AccountProvider';\n\n//components\nimport ChatDialog from './chat/ChatDialog';\nimport LoginDialog from './account/LoginDialog';\n\nconst Component = styled(Box)`\n    height: 100vh;\n    background: #DCDCDC;\n`;\n\nconst Header = styled(AppBar)`\n    background-color: #00A884;\n    height: 125px;\n    box-shadow: none;\n`;\n    \nconst LoginHeader = styled(AppBar)`\n    background: #00bfa5;\n    height: 200px;\n    box-shadow: none;\n`;\n\nconst Messenger = () => {\n    const { account } = useContext(AccountContext);\n    \n    return (\n        <Component>\n            {\n                account ? \n                <>\n                    <Header>\n                        <Toolbar></Toolbar>\n                    </Header>\n                    <ChatDialog />\n                </>\n                :\n                <>\n                    <LoginHeader>\n                        <Toolbar></Toolbar>\n                    </LoginHeader>\n                    <LoginDialog />\n                </>\n            }\n        </Component>\n    )\n}\n\nexport default Messenger;"],"names":["ImageContainer","styled","Box","_templateObject","_taggedTemplateLiteral","Image","width","height","borderRadius","padding","BoxWrapper","_templateObject2","DescriptionContainer","_templateObject3","Profile","account","useContext","AccountContext","_jsxs","_Fragment","children","_jsx","src","picture","alt","Typography","name","Header","Component","Text","drawerStyle","left","top","boxShadow","_ref","open","setOpen","profile","Drawer","onClose","handleClose","PaperProps","sx","style","zIndex","ArrowBack","onClick","MenuOption","MenuItem","googleLogout","HeaderMenu","useState","openDrawer","setOpenDrawer","setAccount","setShowloginButton","showlogoutButton","setShowlogoutButton","setPerson","UserContext","MoreVert","event","currentTarget","Menu","anchorEl","keepMounted","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","InfoDrawer","Wrapper","MessageIcon","Icon","InputField","InputBase","_templateObject4","setText","SearchIcon","fontSize","placeholder","inputProps","onChange","e","target","value","url","setConversation","async","axios","post","concat","data","error","console","log","getConversation","users","formatDate","date","hours","Date","getHours","minutes","getMinutes","objectFit","Container","Timestamp","_message$text","user","newMessageFlag","message","setMessage","useEffect","senderId","sub","receiverId","text","timestamp","updatedAt","getConversationMessage","getUser","includes","StyledDivider","Divider","setUsers","socket","setActiveUsers","fiteredData","get","getUsers","filter","toLowerCase","fetchData","current","emit","on","map","index","Conversation","length","Search","Conversations","Name","RightContainer","Status","person","activeUsers","find","Own","Time","TextMessage","_ref2","createdAt","ImageMessage","_ref3","position","display","split","pop","bottom","right","GetAppIcon","originalImage","preventDefault","fetch","then","resp","blob","window","URL","createObjectURL","a","document","createElement","href","duplicateName","download","body","appendChild","click","revokeObjectURL","catch","downloadMedia","marginRight","border","type","ClipIcon","AttachFile","sendText","setValue","setFile","file","setImage","FormData","append","response","uploadFile","getImage","EmojiEmotions","htmlFor","id","files","onFileChange","onKeyPress","Mic","_conversation$members2","conversation","messages","setMessages","incomingMessage","setIncomingMessage","image","scrollRef","useRef","setNewMessageFlag","now","getMessages","_id","getMessageDetails","_scrollRef$current","scrollIntoView","transition","_conversation$members","members","prev","member","ref","Message","Footer","code","keyCode","which","conversationId","newMessages","ChatBox","getConversationDetails","ChatHeader","Messages","marginTop","Title","SubTitle","_templateObject5","EmptyChat","LeftComponent","RightComponent","dialogStyle","margin","maxWidth","maxHeight","overflow","ChatDialog","Dialog","BackdropProps","backgroundColor","Object","keys","QRCOde","StyledList","List","LoginDialog","showloginButton","ListItem","transform","GoogleLogin","buttonText","onSuccess","decoded","jwt_decode","res","credential","addUser","onError","AppBar","LoginHeader","Messenger","Toolbar"],"sourceRoot":""}